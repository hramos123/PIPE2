<?xml version="1.0" encoding="UTF-8"?>
<project name="PIPE2" default="deploy" basedir="."> 


  <property environment="env"/>
  <property file="build.properties"/>

	<path id="classpath">
    <!--<pathelement location="build"/>-->
    <pathelement location="src"/>
    <pathelement location="lib/gwt-visualization.jar"/>
    <pathelement location="lib/charts4j-gwt-1.2.jar"/>
    <pathelement location="lib/gwt2swf-0.6.0.jar"/>
    <pathelement location="lib/gwt-fabridge.jar"/>
    <pathelement location="lib/gwm-4pipe2.jar"/>
    <pathelement location="lib/gwt-widgets-0.1.3.jar"/>
    <pathelement location="lib/GraphML.jar"/>
    <pathelement location="lib/tagsoup.jar"/>
    <pathelement location="lib/commons-fileupload-1.2.jar"/>
    <pathelement location="lib/commons-io-1.3.1.jar"/>
    <pathelement location="${y.files.lib.dir}/y.jar"/>
    <pathelement location="${y.files.flex.lib.dir}/yfiles-server.jar"/>
    <pathelement location="${gwt_home}/gwt-user.jar"/>
    <pathelement location="${gwt_home}/gwt-dev.jar"/>
    <pathelement location="${gwt_home}/gwt-servlet.jar"/>
    <pathelement location="${servlet-api.jar}"/>
  </path>


  <target name="deploy-war-local" description="builds the war file and puts it in the local deploy directory">
    <delete file="build/${war}"/>
	  <!-- modify this file real quick... -->
	  <replaceregexp
			  file="war/config.xml"
			  flags="gs"
			  match="PIPE2"
			  replace="PIPE2/PIPE2"/>
	  <replaceregexp
			  file="war/config.xml"
			  flags="gs"
			  match="8888"
			  replace="8080"/>

    <!-- build war -->
    <antcall target="war"/>

	  <!-- modify back this file real quick... -->
	  <replaceregexp
			  file="war/config.xml"
			  flags="gs"
			  match="PIPE2/PIPE2"
			  replace="PIPE2"/>
	  <replaceregexp
			  file="war/config.xml"
			  flags="gs"
			  match="8080"
			  replace="8888"/>

    <!-- copy war file to deploy directory -->
      <copy file="build/${war}" todir="${deploy}"/>
    <echo>browse ${url}</echo>
  </target>


  <target name="deploy"
    description="deploys the war file to temp directory (for upload to server)">
	  <!-- modify this file real quick... -->
	  <replaceregexp
			  file="war/config.xml"
			  flags="gs"
			  match="localhost:8888"
			  replace="pipe2.systemsbiology.net/PIPE2"/>

      <!-- build war -->
      <antcall target="war"/>

	  <!-- modify back this file real quick... -->
      <replaceregexp
			  file="war/config.xml"
			  flags="gs"
			  match="pipe2.systemsbiology.net/PIPE2"
			  replace="localhost:8888"/>

      <!-- copy war to temp directory (for upload to server) -->
	  <copy todir="${deploy_dir}">
	  <!--<copy todir="C:\Documents and Settings\hramos\My Documents\temp">-->
		  <fileset dir="build">
			  <filename name="PIPE2.war"/>
		  </fileset>
	  </copy>
  </target>

  <target name="war" depends="compile,compile.gwt" description="builds the war file">
    <delete file="build/${war}"/>
    <war warfile="build/${war}" webxml="war/WEB-INF/web.xml">
	    <!--<webinf file="yfiles-ajax-license.xml"/>-->
      <!-- bytecode from your Java code -->
      <classes dir="war/WEB-INF/classes" includes="**/*.class"/>
      <!-- generated HTML/JavaScript plus your CSS -->
      <fileset dir="war/"/>
    </war>
  </target>


  <target name="clean" depends="clean.test"
   description="deletes all generated files">
    <delete dir="war/PIPE2"/> <!-- generated by the prepare target -->
    <mkdir dir="war/PIPE2"/>
  </target>

  <target name="clean.test" description="deletes all generated test files">
    <delete dir="test"/>
  </target>

  <target name="compile" depends="prepare"
    description="compiles Java source files to bytecode">
    <javac srcdir="src" destdir="war/WEB-INF/classes/"
      classpathref="classpath" debug="true">
    </javac>
  </target>

  <target name="compile.gwt" description="compiles Java source files to JavaScript">
    <java classname="com.google.gwt.dev.Compiler"  classpathref="classpath" fork="true">
        <jvmarg  value="-Xmx512m"/>
      <arg line="-logLevel INFO"/>
      <!--<arg line="-gen build/review"/> -->
      <!--<arg line="-out build/www"/>-->
      <!-- <arg line="-treeLogger"/> was DETAILED-->
      <arg line="-style OBFUSCATE"/>
      
      <arg value="${package}.${module}"/>
    </java>
  </target>


  <target name="hosted" depends="compile"
    description="runs the application in hosted mode">
    <java classname="com.google.gwt.dev.HostedMode"
      classpathref="classpath" fork="true">
      <jvmarg value="-Xmx512m"/>
        
       <arg  line="-startupUrl PIPE2.html"/>
      <arg line="${package}.${module}"/>
    </java>
  </target>


  <target name="prepare" description="creates output directories">
    <mkdir dir="war/WEB-INF/classes"/>
  </target>


  <target name="test" depends="clean.test,compile"
    description="runs all JUnit tests">
    <mkdir dir="test-src"/>
    <junit fork="yes" printsummary="yes">
      <jvmarg value="-XstartOnFirstThread"/>
      <classpath refid="classpath"/>
      <batchtest todir="test">
        <fileset dir="src" includes="**/${test}Test.java"/>
      </batchtest>
      <formatter type="xml"/>
    </junit>
    <junitreport toDir="test">
      <fileset dir="test"/>
      <report format="frames" todir="test"/>
    </junitreport>
    <exec os="Windows" executable="cmd.exe">
      <arg line="/c start test/index.html"/>
    </exec>
    <exec os="Mac OS X" executable="open">
      <arg line="-a /Applications/Safari.app test/index.html"/>
    </exec>
  </target>


  <target name="undeploy" description="undeploys the web app. from Tomcat">
    <delete dir="${env.TOMCAT_HOME}/webapps/${ant.project.name}"/>
    <delete file="${env.TOMCAT_HOME}/webapps/${war}"/>
  </target>


  <target name="copy-resources-local-debug">
	  <copy todir="${local.debug.dir}/PIPEletResourceDir">
		  <fileset dir="war/PIPEletResourceDir"/>
	  </copy>
  </target>
	<target name="copy-resources-local-unittest">
	  <copy todir="${local.unit.test.dir}/PIPEletResourceDir">
		  <fileset dir="war/PIPEletResourceDir"/>
	  </copy>
	  <copy todir="${local.unit.test.dir}/WEB-INF" file="yfiles-ajax-license.xml"/>
  </target>

</project>
